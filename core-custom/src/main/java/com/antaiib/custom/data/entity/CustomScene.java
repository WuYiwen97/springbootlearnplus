package com.antaiib.custom.data.entity;

import com.antaiib.custom.data.entity.base.BaseCustomScene;
import org.apache.commons.lang3.StringUtils;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class CustomScene extends BaseCustomScene<CustomScene> {
    /**
     * 多对多关联表中数据表的编码字段名称(A-A 表返回null)
     *
     * @return {@link String}
     */
    public String getMnRltnOrdinaryCodeField() {
        return this.getSceneType() == 0
                ? null
                : this.getOrdinaryTableName() + "_" + this.getOrdinaryTableRltnName();
    }

    /**
     * 多对多关联表中树表的编码字段名称(A-A 表返回null)
     *
     * @param isContainTableName 是包含表名
     * @return {@link String}
     */
    public String getMnRltnTreeCodeField(boolean isContainTableName) {
        String mnRltnTreeCodeField = this.getTreeTableName() + "_" + this.getTreeTableRltnName();

        mnRltnTreeCodeField = isContainTableName
                ? this.getRltnTableName() + "$" + mnRltnTreeCodeField
                : mnRltnTreeCodeField;

        return this.getSceneType() == 0
                ? null
                : mnRltnTreeCodeField;
    }

    /**
     * 多对多关联表中数据表的扩展类别编码字段名称(A-A 表返回null) 仅A-B表且配置类型不是无配置才会存在扩展类别
     *
     * @param isContainTableName 是包含表名
     * @return {@link String}
     */
    public String getMnRltnOrdinaryExpandTypeField(boolean isContainTableName) {
        String mnRltnOrdinaryExpandTypeField = isContainTableName
                ? this.getRltnTableName() + "$" + "category"
                : "category";

        return this.getSceneType() == 0 || this.getOrdinaryConfigType() == -1
                ? null
                : mnRltnOrdinaryExpandTypeField;
    }

    /**
     * 判断是否是A表，是返回true，B表则返回false，其余抛出异常
     */
    public boolean isATable(String tableName) {
        if (tableName.equals(this.getTreeTableName())) {
            return true;
        } else if (tableName.equals(this.getOrdinaryTableName())) {
            return false;
        } else {
            throw new IllegalArgumentException("传入表非场景表主表，请检查");
        }
    }

    /**
     * 分类表中分类编码字段名称(无分类表则返回null)
     *
     * @param classifyCodeField 分类编码字段名
     * @return {@link String}
     */
    public String getClassifyCodeField(String classifyCodeField) {
        if (StringUtils.isBlank(this.getClassifyTableName())) {
            return null;
        }

        return this.getClassifyTableName() + "$" + classifyCodeField;
    }

}
